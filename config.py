import sqlite3

import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
# from main import*
TOKEN = '6668392385:AAEv2_ROZSkJFQjaVp29uEhfFPrG6xN_Bp4'
   # –°–ª–æ–≤–∞—Ä—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
buttons_dict = {
        'user': [
            ['üõí –ó–∞–∫–∞–∑–∞—Ç—å', 'üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤'],
            ['üîÑ –°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞']
        ],
        'company_rep': [
            ['üìä –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤', 'üí∞ –ë–∞–ª–∞–Ω—Å –∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞'],
            ['üìù –®–∞–±–ª–æ–Ω—ã –∑–∞–∫–∞–∑–æ–≤', 'üîê –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è']
        ],
        'courier': [
            ['üöö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –∑–∞–∫–∞–∑—á–∏–∫–æ–≤'],
            ['üíµ –û–ø–ª–∞—Ç–∞ –∏ —Å—á–µ—Ç-—Ñ–∞–∫—Ç—É—Ä–∞', '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É']
        ],
        'admin': [
            ['üïµÔ∏è‚Äç‚ôÇÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—É—Ä—å–µ—Ä–æ–≤', 'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑'],
            ['üîÑ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑—ã', 'üîí –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è']
        ],
        'owner': [
            ['üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', 'üìä –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
            ['üîê –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', '‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏']
        ]
    }

    


try:
    conn = sqlite3.connect('hleb.db', check_same_thread=False)
    cursor = conn.cursor()
    bot = telebot.TeleBot(TOKEN)

except Exception as e:
    print(f"Error during bot initialization: {e}")

def reg(message):
    global cid
    global full_name
    cid = message.chat.id

    full_name = f"{message.from_user.first_name} {message.from_user.last_name}" \
        if message.from_user.last_name \
        else message.from_user.first_name
    full_name = full_name.replace('None', '')
    try:
        if message.text == '–î–∞':
            cursor.execute('INSERT INTO Users (tg_id, Full_name, Username) VALUES (?, ?, ?)',
                           (message.from_user.id, full_name, message.from_user.username))
            conn.commit()
            bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ', reply_markup=types.ReplyKeyboardRemove())
            main_button()

        elif message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –±–ª—è')
            bot.register_next_step_handler(message, edit_name)
    except Exception as e:
        print(f"Error during bot initialization: {e}")

def edit_name(message):
    try:
        cursor.execute('INSERT INTO Users (tg_id, Full_name, Username) VALUES (?, ?, ?)',
                       (message.from_user.id, message.text, message.from_user.username))
        conn.commit()
        bot.send_message(cid, '–£—Å–ø–µ—à–Ω–æ!', reply_markup=types.ReplyKeyboardRemove())
        main_button()
    except Exception as e:
        print(e)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
def get_product_name(message):
    global product_name
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
        if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
            add_catalog_cancel(message)
            return


        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        product_name = message.text.strip()

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ReplyKeyboardMarkup –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_cancel = types.KeyboardButton('–û—Ç–º–µ–Ω–∞')
        keyboard.row(btn_cancel)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –≤–≤–æ–¥ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:', reply_markup=keyboard)

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.register_next_step_handler(message, get_product_price)
    except Exception as e:
        print(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
def get_product_price(message):
    global price
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
        if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
            add_catalog_cancel(message)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
        if not message.text.replace('.', '').isdigit():
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.', reply_markup=types.ReplyKeyboardRemove())
            return

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
        price = message.text.strip()

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ReplyKeyboardMarkup –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_cancel = types.KeyboardButton('–û—Ç–º–µ–Ω–∞')
        keyboard.row(btn_cancel)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:', reply_markup=keyboard)

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.register_next_step_handler(message, get_product_description)
    except Exception as e:
        print(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
def get_product_description(message):
    global description
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
        if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
            add_catalog_cancel(message)
            return

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        description = message.text.strip()

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ ReplyKeyboardMarkup –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_cancel = types.KeyboardButton('–û—Ç–º–µ–Ω–∞')
        markup.row(btn_cancel)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –≤–≤–æ–¥ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞? (–î–∞/–ù–µ—Ç)', reply_markup=markup)

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.register_next_step_handler(message, ask_for_photo)
    except Exception as e:
        print(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
def ask_for_photo(message):
    global photo_data
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
        if message.text and message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
            add_catalog_cancel(message)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
        if message.text and message.text.lower() == '–¥–∞':
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞.')

            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ
            bot.register_next_step_handler(message, get_product_photo)
        elif message.text and message.text.lower() == '–Ω–µ—Ç':
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ —Ñ–æ—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
            add_product_to_catalog(message)
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ "–î–∞" –∏–ª–∏ "–ù–µ—Ç".', reply_markup=types.ReplyKeyboardRemove())
    except Exception as e:
        print(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
def get_product_photo(message):
    global photo_data
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
        if message.text and message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
            add_catalog_cancel(message)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ
        if message.photo:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–æ—Ç–æ
            photo_data = message.photo[-1].file_id

            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–æ—Ç–æ
            bot.send_message(message.chat.id, '–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.')
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞.')

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥
        add_product_to_catalog(message)
    except Exception as e:
        print(e)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥
def add_product_to_catalog(message):
    global product_name, price, description, photo_data
    try:
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('INSERT INTO Products (ProductName, Price, Description, Photo_data) VALUES (?, ?, ?, ?)',
                       (product_name, price, description, photo_data))
        conn.commit()

        # –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        product_name = ""
        price = ""
        description = ""
        photo_data = None

        bot.send_message(message.chat.id, '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥.', reply_markup=types.ReplyKeyboardRemove())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e} –í —á–∞—Ç–µ {message.chat.id}")


def add_catalog_cancel(message):
    bot.send_message(message.chat.id, '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.', main_button(message))


def main_button(message):
    global cid
    cid = message.chat.id
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    try:
        user_type = get_user_type(message)
    except Exception as e:
        print(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–≤–∞—Ä–µ: {e}")

 # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    button_text = buttons_dict.get(user_type, [])
    for row in button_text:
        keyboard.row(*row)
    if message.text == "/start":
        bot.send_message(message.chat.id,'–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ ', reply_markup=keyboard)
    bot.register_next_step_handler(message, handler_main_button)


def handler_main_button(message):
    
    if message.text == 'üõí –ó–∞–∫–∞–∑–∞—Ç—å':
        bot.send_message(message.chat.id, 'ti pidor')



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def create_inline_keyboard():
    markup = types.InlineKeyboardMarkup(row_width=3)
    btn_previous = types.InlineKeyboardButton('–ü—Ä–µ–¥—ã–¥—É—â–∏–π', callback_data='previous_product')
    btn_next = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–π', callback_data='next_product')
    btn_add_to_cart = types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', callback_data='add_to_cart')
    markup.add(btn_previous, btn_add_to_cart, btn_next)
    return markup

def get_user_type(message):
    try:
        cursor.execute('SELECT UserType FROM Users WHERE tg_id = ? ', (message.chat.id,))
        user_type = cursor.fetchone()
        user_type = user_type[0]
        return user_type
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")




